type Item {
  id: ID!
  name: String!
  amount: Float
  unit: String
  section: String
  checked: Boolean
  deleted: Boolean
  position: Int
}

type Section {
  id: ID!
  name: String!
  position: Int!
}

type Suggestion {
  name: String!
  unit: String!
  section: String!
}

type List {
  name: String!
  id: ID!
  owner: Boolean!
  sections: [Section!]
  items: [Item!]
}

type Query {
  lists: [List!]
  list(id: ID!): List!
  suggestions: [Suggestion!]
}

input NewItem {
  id: ID!
  name: String!
  amount: Float
  unit: String
  section: String
  checked: Boolean
  deleted: Boolean
  position: Int
  table: ID!
}

input NewSection {
  id: ID!
  name: String!
  position: Int!
  table: ID!
}

input NewList {
  name: String!
  id: ID!
}
input DeleteItem {
  id: ID!
  table: ID!
}
type Mutation {
  createList(input: NewList): List
  deleteList(id: ID!): List
  createItem(input: NewItem): Item
  updateItem(input: NewItem!): Item
  deleteItem(input: DeleteItem!): Item
  createSection(input: NewSection): Section
  updateSection(input: NewSection): Section
  deleteSection(id: ID!): Section
}

input SubscritionInput {
  id: ID!
  table: ID!
}

type Subscription {
  itemChanged(input: SubscritionInput!): Item!
  sectionChanged(input: SubscritionInput!): Section!
}
